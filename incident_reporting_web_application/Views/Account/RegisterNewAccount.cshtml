@model incident_reporting_web_application.Models.Account.AccountInfo

@{
    ViewBag.Title = "New Account";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    List<SelectListItem> user = new List<SelectListItem>();
    user.Add(new SelectListItem() { Text = "Lupon", Value = "Lupon" });
    user.Add(new SelectListItem() { Text = "Sanguniang Barangay", Value = "Sanguniang Barangay" });

    List<SelectListItem> personnel = new List<SelectListItem>();
    personnel.Add(new SelectListItem() { Text = "Punong Barangay", Value = "Punong Barangay" });
    personnel.Add(new SelectListItem() { Text = "Barangay Secretary", Value = "Barangay Secretary" });
    personnel.Add(new SelectListItem() { Text = "Sanguniang Barangay Member", Value = "Sanguniang Barangay Member" });
}


<div class="container mt-5 mb-5 px-3 py-4 shadow rounded">

    <h1 class="color-heading">Register New Account</h1>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row pt-3">
            <div class="col-md-6 col-lg-4">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label color-title" })
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6 col-lg-4 mt-2 mt-md-0">
                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label color-title" })
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-4 mt-2 mt-lg-0">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label color-title" })
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row pt-3">
            <div class="col-12">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label color-title" })
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row pt-3">
            <div class="col-md-6">
                @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label color-title" })
                @Html.DropDownListFor(model => model.UserType, user, new { @class = "form-control form-select" })
                @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-6  mt-3 mt-md-0">
                @Html.LabelFor(model => model.PersonnelPosition, htmlAttributes: new { @class = "control-label color-title" })
                @Html.DropDownListFor(model => model.PersonnelPosition, personnel, new { @class = "form-control form-select" })
                @Html.ValidationMessageFor(model => model.PersonnelPosition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row pt-3">
            <div class="col-12">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label color-title" })

                <div class="input-group">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "password-input" } })
                    <button class="btn btn-sm btn-outline-secondary" type="button" id="" onclick="generatePassword()">Generate</button>
                    <button class="btn btn-sm btn-outline-warning" type="button" onclick="showPassowrd()">Show</button>
                </div>

                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row pt-3">
            <div class="col-12">
                <input type="submit" value="Register New Account" class="btn btn-primary" />
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function generatePassword() {
            var passwordField = document.getElementById("password-input");
            var randomstring = Math.random().toString(36).slice(-8);
            passwordField.value = randomstring;
        }

        function showPassowrd() {
            var field = document.getElementById("password-input");
            if (field.type === "password") {
                field.type = "text";
            } else {
                field.type = "password";
            }
        }
    </script>
}